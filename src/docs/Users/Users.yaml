paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios de la base de datos
      tags:
        - Users
      responses: 
        "200":
          description: Lista de usuarios obtenida con éxito
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: "#components/schemas/User"
        "500":
          description: Error interno del servidor
    post:
      summary: Crear un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: "#components/requestBodies/createUser"
      responses: 
        "201":
          description: Usuario creado exitosamente
        "500": 
          description: Error interno del servidor
  /api/users/{uid}:
    get:
      summary: Obtener un usuario por ID
      tags: 
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: ID del usuario a buscar
        schema: 
          type: string
      responses: 
        "200":
          description: Usuario encontrado exitosamente
          content:
            application/json:
              schema: 
                $ref: "#components/schemas/User"
        "500": 
          description: Error interno del servidor
    put: 
      summary: Actualizar un usuario por ID
      tags: 
        - Users
      parameters: 
      - name: uid
        in: path
        required: true
        description: ID del usuario a actualizar
        schema: 
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: "#components/requestBodies/updateUser"
      responses:
        "200":
          description: Usuario actualizado exitosamente
        "404": 
          description: Usuario no encontrado
        "500": 
          description: Error interno del servidor

components: 
  schemas:
    User:
      type: object
      properties:
        _id: 
          type: string
          description: ID autogenerado por MongoDB
        first_name: 
          type: string
          description: Nombre del usuario
        last_name: 
          type: string
          description: Apellido del usuario
        password: 
          type: string
          description: Contraseña del usuario
      example:
        _id: ObjectId("123456")
        first_name: Juan
        last_name: Pérez
        password: password123
  requestBodies:
    createUser: 
      type: object
      properties:
        first_name: 
          type: string
          description: Nombre del usuario
        last_name: 
          type: string
          description: Apellido del usuario
        password: 
          type: string
          description: Contraseña del usuario
        email: 
          type: string
          description: Correo electrónico del usuario
      example:
        first_name: Ana
        last_name: López
        password: securePass2024
        email: ana.lopez@example.com
    updateUser:
      type: object
      properties:
        first_name: 
          type: string
          description: Nombre del usuario
        last_name: 
          type: string
          description: Apellido del usuario
        password: 
          type: string
          description: Contraseña del usuario
        email: 
          type: string
          description: Correo electrónico del usuario
      example:
        first_name: Carlos
        last_name: Ramírez
        password: updatedPass2024
        email: carlos.ramirez@example.com
